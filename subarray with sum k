class Solution {
  public:
    int cntSubarrays(vector<int> &arr, int k) {
        unordered_map<int, int> prefixSumFreq;
        int prefix_sum = 0, count = 0;

        for (int i = 0; i < arr.size(); i++) {
            prefix_sum += arr[i];

            // Case 1: subarray starts from index 0
            if (prefix_sum == k)
                count++;

            // Case 2: check if there exists a prefix sum that leads to current sum - k
            if (prefixSumFreq.find(prefix_sum - k) != prefixSumFreq.end())
                count += prefixSumFreq[prefix_sum - k];

            // Store current prefix_sum frequency
            prefixSumFreq[prefix_sum]++;
        }

        return count;
    }
};
